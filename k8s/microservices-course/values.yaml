ingress:
  host: "microservices.ptechie.localhost"
services:
  registry: saiupadhyayula007
  tag: latest
  apigateway:
    image: new-api-gateway
    appName: api-gateway
    containerPort: 9000
  product:
    image: new-product-service
    appName: product-service
    containerPort: 8080
  inventory:
    image: new-inventory-service
    appName: inventory-service
    containerPort: 8082
  order:
    image: new-order-service
    appName: order-service
    containerPort: 8081
  notification:
    image: new-notification-service
    appName: notification-service
    containerPort: 8083
kafka:
  image:
    debug: true
  controller:
    replicaCount: 1
  extraConfig: |
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
  listeners:
    external:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    client:
      protocol: PLAINTEXT
schema-registry:
  kafka:
    enabled: false
  externalKafka:
    brokers:
      - PLAINTEXT://sb3-kafka:9092
mysql:
  auth:
    rootPassword: mysql
  initdbScriptsConfigMap: "init-sql"
mongodb:
  image:
    debug: true
  extraEnvVars:
    - name: EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU
      value: "1"
  auth:
    enabled: true
    databases:
      - product-service
    usernames:
      - mysql
    passwords:
      - "password"
keycloak:
  image:
    debug: true
  ingress:
    enabled: true
    hostname: keycloak.ptechie.localhost
  auth:
    adminUser: admin
    adminPassword: admin
  production: false
  postgresql:
    enabled: true
loki:
  deploymentMode: SingleBinary
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
    schemaConfig:
      configs:
        - from: "2024-01-01"
          store: tsdb
          index:
            prefix: loki_index_
            period: 24h
          object_store: filesystem # we're storing on filesystem so there's no real persistence here.
          schema: v13
  singleBinary:
    replicas: 1
  read:
    replicas: 0
  backend:
    replicas: 0
  write:
    replicas: 0
tempo-distributed:
  traces:
    zipkin:
      enabled: true